class b{constructor(){this.crc=-1}append(r){const n=this.table;let c=this.crc|0;for(let d=0,w=r.length|0;d<w;d++)c=c>>>8^n[(c^r[d])&255];this.crc=c}get(){return~this.crc}}b.prototype.table=(()=>{const a=[];let r,n,c;for(r=0;r<256;r++){for(c=r,n=0;n<8;n++)c=c&1?c>>>1^3988292384:c>>>1;a[r]=c}return a})();const g=a=>{const r=new Uint8Array(a);return{array:r,view:new DataView(r.buffer)}},q=a=>a.reader.read().then(r=>{if(r.done)return a.writeFooter();const n=r.value;a.crc.append(n),a.uncompressedLength+=n.length,a.compressedLength+=n.length,a.ctrl.enqueue(n)});function x(a){const r=Object.create(null),n=[],c=new TextEncoder;let d=0,w=0,h,i,m;function p(){w++,i=r[n[w]],i?v():m&&y()}const U={enqueue(l){if(m)throw new TypeError("Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed");let t=l.name.trim();const o=new Date(typeof l.lastModified>"u"?Date.now():l.lastModified);if(l.directory&&!t.endsWith("/")&&(t+="/"),r[t])throw new Error("File already exists.");const s=c.encode(t);n.push(t);const e=r[t]={level:0,ctrl:h,directory:!!l.directory,nameBuf:s,comment:c.encode(l.comment||""),compressedLength:0,uncompressedLength:0,writeHeader(){let u=g(26),f=g(30+s.length);e.offset=d,e.header=u,e.level!==0&&!e.directory&&u.view.setUint16(4,2048),u.view.setUint32(0,335546376),u.view.setUint16(6,(o.getHours()<<6|o.getMinutes())<<5|o.getSeconds()/2,!0),u.view.setUint16(8,(o.getFullYear()-1980<<4|o.getMonth()+1)<<5|o.getDate(),!0),u.view.setUint16(22,s.length,!0),f.view.setUint32(0,1347093252),f.array.set(u.array,4),f.array.set(s,30),d+=f.array.length,h.enqueue(f.array)},writeFooter(){let u=g(16);u.view.setUint32(0,1347094280),e.crc&&(e.header.view.setUint32(10,e.crc.get(),!0),e.header.view.setUint32(14,e.compressedLength,!0),e.header.view.setUint32(18,e.uncompressedLength,!0),u.view.setUint32(4,e.crc.get(),!0),u.view.setUint32(8,e.compressedLength,!0),u.view.setUint32(12,e.uncompressedLength,!0)),h.enqueue(u.array),d+=e.compressedLength+16,p()},fileLike:l};i||(i=e,v())},close(){if(m)throw new TypeError("Cannot close a readable stream that has already been requested to be closed");i||y(),m=!0}};function y(){let l=0,t=0,o,s;for(o=0;o<n.length;o++)s=r[n[o]],l+=46+s.nameBuf.length+s.comment.length;const e=g(l+22);for(o=0;o<n.length;o++)s=r[n[o]],e.view.setUint32(t,1347092738),e.view.setUint16(t+4,5120),e.array.set(s.header.array,t+6),e.view.setUint16(t+32,s.comment.length,!0),s.directory&&e.view.setUint8(t+38,16),e.view.setUint32(t+42,s.offset,!0),e.array.set(s.nameBuf,t+46),e.array.set(s.comment,t+46+s.nameBuf.length),t+=46+s.nameBuf.length+s.comment.length;e.view.setUint32(t,1347093766),e.view.setUint16(t+8,n.length,!0),e.view.setUint16(t+10,n.length,!0),e.view.setUint32(t+12,l,!0),e.view.setUint32(t+16,d,!0),h.enqueue(e.array),h.close()}function v(){if(i){if(i.directory)return i.writeFooter(i.writeHeader());if(i.reader)return q(i);i.fileLike.stream?(i.crc=new b,i.reader=i.fileLike.stream().getReader(),i.writeHeader()):p()}}return new ReadableStream({start:l=>{h=l,a.start&&Promise.resolve(a.start(U))},pull(){return v()||a.pull&&Promise.resolve(a.pull(U))}})}export{b as Crc32,x as createZipWriter};
